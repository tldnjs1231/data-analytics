{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"5_회귀모델_샘플_데이터_실습","provenance":[],"authorship_tag":"ABX9TyM92C+coINbUJ1Isc3moFJY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 선형 회귀(Linear Regression)"],"metadata":{"id":"UfSjKBNEUYRU"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"FvbhUoW7UN5q"},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","source":["### 샘플 데이터를 활용한 실습\n","- np.random 모듈을 사용하여 샘플 데이터(feature) 생성\n","- 임의로 설정한 회귀계수/절편과 샘플 데이터로 정답 데이터(target) 산출\n","- 샘플 feature/target 모델 학습 수행\n","- 모델이 예측한 회귀계수와 앞서 설정한 회귀계수 비교"],"metadata":{"id":"9ejsylpuUf6N"}},{"cell_type":"code","source":["# 임의의 weight, bias 설정\n","b = 5\n","w1 = 4\n","\n","# 샘플 feature 생성 -> 0~3의 값을 가지는 임의의 실수 100개\n","x = 3 * np.random.rand(100, 1)\n","\n","# 데이터의 간격을 벌리기 위하여 데이터에 부여할 noise 생성\n","noise = np.random.randn(100, 1)\n","\n","# 정답 데이터 y 산출\n","y = w1*x + b + noise\n","\n","print(f'Feature: \\n{x[:10]} ...')\n","print()\n","print(f'Noise: \\n{noise[:10]} ...')\n","print()\n","print(f'Target: \\n{y[:10]} ...')\n","\n","# python random\n","# 1) random.randint(start, end): start, end-1 사이의 랜덤한 숫자 1개 추출\n","# 2) random.rand(m, n): 0~1의 균일분포/균등분포 난수를 생성(m x n array 형태)\n","# 3) random.randn(m, n): 평균 0, 표준편차 1의 가우시안 표준정규분포 난수를 생성(대체로 -1~1의 값)"],"metadata":{"id":"kALwS0LmUZ1M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 샘플 데이터 분포 시각화\n","plt.scatter(x, y)"],"metadata":{"id":"eV1dA5d0UbvP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","\n","# LinearRegression 모델 객체 생성\n","lr = LinearRegression()\n","\n","# 모델 학습\n","lr.fit(x, y)\n","\n","print('Bias:', lr.intercept_)\n","print('Weight:', lr.coef_)\n","\n","# 실제 weight, bias 값과 유사한 값을 반환"],"metadata":{"id":"lMMkTvj1Ubr3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# y에 대한 예측 수행\n","pred = lr.predict(x)\n","\n","# 실제 데이터와 회귀선 시각화\n","plt.scatter(x, y) # actual y\n","plt.plot(x, pred, 'r') # predicted y"],"metadata":{"id":"ian8qSJ_Ubof"},"execution_count":null,"outputs":[]}]}